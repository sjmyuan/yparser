<scalastyle>
  <name>Scalastyle standard configuration</name>
  <check level="error" class="org.scalastyle.file.FileTabChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.file.FileLengthChecker" enabled="true">
    <parameters>
      <parameter name="maxFileLength"><![CDATA[800]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.file.IndentationChecker" enabled="true">
    <parameters>
      <parameter name="tabSize">2</parameter>
      <parameter name="methodParamIndentSize">4</parameter>
      <parameter name="classParamIndentSize">4</parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.file.HeaderMatchesChecker" enabled="false"></check>
  <check level="error" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.scalariform.ProcedureDeclarationChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
    <parameters>
      <parameter name="maxLineLength"><![CDATA[160]]></parameter>
      <parameter name="tabSize"><![CDATA[2]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
    <parameters>
      <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
    <parameters>
      <parameter name="maxParameters"><![CDATA[8]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="true">
    <parameters>
      <parameter name="ignore"><![CDATA[-1,0,1,8080]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.scalariform.NullChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.file.RegexChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[println]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.file.RegexChecker" enabled="true">
    <parameters>
      <parameter name="regex">(?m)^\s*$(\r|)\n^\s*$(\r|)\n</parameter>
      <parameter name="line">false</parameter>
    </parameters>
    <customMessage>No double blank lines</customMessage>
  </check>
  <check level="error" class="org.scalastyle.scalariform.EmptyClassChecker"  enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.DisallowSpaceBeforeTokenChecker" enabled="true">
    <parameters>
      <parameter name="tokens">COLON, COMMA, RPAREN</parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.DisallowSpaceAfterTokenChecker" enabled="true">
    <parameters>
      <parameter name="tokens">LPAREN</parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.EmptyInterpolatedStringChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.EnsureSingleSpaceAfterTokenChecker" enabled="true">
    <parameters>
      <parameter name="tokens">COLON, IF</parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.EnsureSingleSpaceBeforeTokenChecker" enabled="false">
    <parameters>
      <parameter name="tokens">LPAREN</parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.FieldNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex">^[a-z][A-Za-z0-9]*$</parameter>
      <parameter name="objectFieldRegex">^[A-Za-z][A-Za-z0-9]*$</parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.ForBraceChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.ImportGroupingChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.MethodArgumentNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex">^[a-z][A-Za-z0-9]*$</parameter>
      <parameter name="ignoreRegex">^$</parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.MultipleStringLiteralsChecker" enabled="false">
    <parameters>
      <parameter name="allowed">1</parameter>
      <parameter name="ignoreRegex">^\&quot;\&quot;$</parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.NotImplementedErrorUsage" enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.PackageNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex">^[a-z][A-Za-z]*$</parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.PatternMatchAlignChecker" enabled="false"/>
  <check level="error" class="org.scalastyle.scalariform.RedundantIfChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.VarFieldChecker" enabled="true"/>
  <check level="error" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
    <parameters>
      <parameter name="maxTypes"><![CDATA[30]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
    <parameters>
      <parameter name="maximum"><![CDATA[10]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
    <parameters>
      <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
      <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
    <parameters>
      <parameter name="maxLength"><![CDATA[50]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
    <parameters>
      <parameter name="maxMethods"><![CDATA[30]]></parameter>
    </parameters>
  </check>
  <check level="error" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"></check>
  <check level="error" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"></check>
  <check level="error" class="org.scalastyle.file.RegexChecker" enabled="true">
    <parameters>
      <parameter name="regex">
        ((lazy)\s+(override|private|protected|final|implicit))|((implicit)\s+(override|private|protected|final))|((final)\s+(override|private|protected))|((private|protected)\s+(override))
      </parameter>
    </parameters>
    <customMessage>Modifiers should be declared in the following order: "override access (private|protected) final
      implicit lazy".
    </customMessage>
  </check>
</scalastyle>
